.. _intellij-run-java-queries:

================
Run Java Queries
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

The {+intellij-full+} enables you to run queries written in Java directly 
in the Database Explorer Playgrounds. 

The Run button appears next to your MongoDB queries.

.. image:: /images/run-queries/intellij-run-icon.png
   :alt: Click the Run button to convert your Java query to mongosh syntax.

Behavior
--------

When you click the Run button, the plugin automatically converts your 
Java query to ``mongosh`` syntax and opens a Playground file with the 
populated query.

For field values that are variables determined at runtime, the plugin 
creates a placeholder variable. You can populate this placeholder with 
a test value and run the query in the Playground. 

Example
-------

In this example, the Java query on the ``production.trips`` collection
resemles the following:

.. code:: java
   :copyable: false

   public List<Document> findCompletedTripsByDriver(String driverId) {
      return trips.find(Filters.and(
              Filters.eq(fieldName: "trip_status", value: "completed"),
              Filters.eq(fieldName: "driver_id", driverId)
      )).into(new ArrayList<>());
   }

The code example below shows the converted query from the Java code 
above.

.. code:: javascript
   :copyable: false

   var driver_id = ""

   db.getSiblingsDB("production")
     .getCollection("trips")
     .find( { 
        "$and" : [ 
           { "trips.status" : "completed" },
           { "driver_id" : driver_id }
        ]
      )

In this example, ``driver_id`` is a variable that holds a value 
determined at runtime.

Once you are satisfied with the query, you can run it in the Playground 
and view the query results.

